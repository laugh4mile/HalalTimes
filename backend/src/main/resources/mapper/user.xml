<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.web.bigdata.model.mapper.UserMapper">
	
	<!-- UserController -->

	<select id="getAllUser" resultType="UserDto">
		select email, nickname, role, profile_image
<!-- 		, count(distinct post.postNo) as postCnt, count(distinct commentNo) as commentCnt -->
<!--         from USER left join REVIEW using(EMAIL) -->
<!--         left join comment using(EMAIL) -->
<!--         group by EMAIL; -->
		from user
	</select>
	
	<select id="getRole" parameterType="string" resultType="string">
		select role
		from user
		where email = #{email}
	</select>

	<insert id="join" parameterType="UserDto">
		insert into user (email, password, nickname, born_year, gender)
		values (#{email}, #{password}, #{nickname}, #{born_year}, #{gender})
	</insert>

	<select id="emailCheck" parameterType="string" resultType="string">
		select email
		from user
		where email = #{email}
	</select>

	<select id="nameCheck" parameterType="string" resultType="string">
		select nickname
		from user
		where nickname = #{nickname}
	</select>

	<select id="findUserInfo" parameterType="string" resultType="UserDto">
		select *
		from user
		where email=#{email}
	</select>

	<update id="updatePwd" parameterType="UserDto">
		update user
		set password = #{password}
		where email=#{email}
	</update>

	<delete id="delete" parameterType="string">
		delete 
		from user
		where email=#{email}
	</delete>

	<update id="saveImg" parameterType="UserDto">
		update user
		set profile_image = #{profile_image}
		where email=#{email}
	</update>

	<update id="deleteImg" parameterType="string">
		update user
		set profile_image = null
		where email=#{email}
	</update>

	<!-- LoginController -->
	
	<select id="login" parameterType="UserDto" resultType="UserDto">
		select email, password, nickname, role
		from user
		where email=#{email}
	</select>

	<select id="findPwd" parameterType="string" resultType="string">
		select password
		from user
		where email=#{email}
	</select>
	
<!-- 	<select id="getPostList" parameterType="string" resultType="PostDto"> -->
<!-- 		select postNo, title, content, -->
<!-- 				case when date_format(uploadDate, '%Y%m%d') = date_format(now(), '%Y%m%d') -->
<!-- 				then date_format(uploadDate, '%H:%i:%s') -->
<!-- 				else date_format(uploadDate, '%y.%m.%d') -->
<!-- 				end uploadDate, -->
<!-- 				case when date_format(modifyDate, '%Y%m%d') = date_format(now(), '%Y%m%d') -->
<!-- 				then date_format(modifyDate, '%H:%i:%s') -->
<!-- 				else date_format(modifyDate, '%y.%m.%d') -->
<!-- 				end modifyDate, -->
<!-- 				likeCnt, EMAIL, NICKNAME, -->
<!-- 				( -->
<!-- 					select thumbnail -->
<!-- 					from ( -->
<!-- 						select pp.*, (select count(*) -->
<!-- 									from post_vote -->
<!-- 									where pp.picNo = post_vote.picNo -->
<!-- 						            ) as count -->
<!-- 						from post_pics pp -->
<!-- 						where post.postNo = pp.postNo -->
<!-- 						order by count desc -->
<!-- 						) as temp -->
<!-- 					limit 1 -->
<!-- 				) as thumbnail, -->
<!-- 				( -->
<!-- 					select thumbnail -->
<!-- 					from ( -->
<!-- 						select pp.*, (select count(*) -->
<!-- 									from post_vote -->
<!-- 									where pp.picNo = post_vote.picNo -->
<!-- 						            ) as count -->
<!-- 						from post_pics pp -->
<!-- 						where post.postNo = pp.postNo -->
<!-- 						order by count desc -->
<!-- 						) as temp -->
<!-- 					limit 1, 1 -->
<!-- 				) as thumbnailTwo, -->
<!-- 				( -->
<!-- 					select count(*) -->
<!-- 					from comment -->
<!-- 		            where post.postNo = comment.postNo -->
<!-- 				) as commentCnt  -->
<!-- 		from post join USER using(EMAIL) -->
<!-- 		where EMAIL = #{EMAIL} and temp = 0 -->
<!-- 	</select> -->

</mapper>